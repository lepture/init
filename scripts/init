#!/usr/bin/env python
# coding: utf-8

import sys
import datetime
import terminal
from terminal.builtin import Command
import init


class InitCommand(Command):
    def print_help(self):
        super(InitCommand, self).print_help()
        print(terminal.cyan('  Examples:\n'))
        print('    $ init flask')
        print('    $ init lepture/template-flask')
        print('')
        url = 'https://github.com/init-template'
        print('  Find templates on %s\n' % terminal.underline(url))


program = InitCommand(
    'init',
    description='init a project',
    version=init.__version__
)


@program.action
def license(year=None, organization=None):
    """
    Show available licenses.

    :param year: the copyright year
    :param organization: the organization name of the project

    :option organization: --organization [name]
    """

    from init import license

    args = filter(lambda o: not o.startswith('-'), program.args)

    if not year:
        year = datetime.datetime.utcnow().year

    if year:
        year = int(year)

    if args:
        name = args[0]
        data = license.parse(
            name,
            year=year,
            organization=organization,
        )
        if not data:
            print('Not Found')
            return
        sys.stdout.write(data)
    else:
        print('\t'.join(license.licenses()))
    return sys.exit()


@program.action
def install(name):
    """
    Install a template to ~/.init-template/

    :param name: name of the template scaffold
    """
    pass


@program.action
def update(name=None):
    """
    Update templates in ~/.init-template/
    """
    pass


try:
    program.parse()
except RuntimeError as e:
    print('\n  %s\n' % e)
